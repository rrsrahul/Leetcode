class Solution {
public:
    int m,n;
    
    int getSum(int i,int j,vector<vector<int>>& a)
    {
        if(i<0 || j<0)
        {
            return 0;
        }
        if(i>=m)
        {
            i=m-1;
        }
        if(j>=n)
        {
            j=n-1;
        }
        
        return a[i][j];
    }
    
    
    vector<vector<int>> matrixBlockSum(vector<vector<int>>& mat, int K) {
         m = mat.size();
         n = mat[0].size();
        
        vector<vector<int>> sum(m,vector<int> (n,0));
        for(int i = 0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                sum[i][j]=mat[i][j]+getSum(i-1,j,sum)+getSum(i,j-1,sum)-getSum(i-1,j-1,sum);
            }
            
        }
        for(int i = 0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                cout<<sum[i][j]<<" ";
            }
            cout<<endl;
            
        }
       
         vector<vector<int>> ans(m,vector<int> (n,0));
        
        for(int i =0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                ans[i][j]=getSum(i+K,j+K,sum)-getSum(i+K,j-K-1,sum)-getSum(i-K-1,j+K,sum)+getSum(i-K-1,j-K-1,sum);
            }
        }
        
        
        
        return ans;
    }
};