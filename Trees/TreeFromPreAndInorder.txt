/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
  TreeNode *buildBinary(vector<int> &preorder, vector<int> &inorder, int start, int end, int &pos) {
        TreeNode *root = NULL;
        if (start <= end) {
            int i;
            for (i = start; i <= end; i++) {
                if (inorder[i] == preorder[pos]) 
                    break;
            }
            root = new TreeNode(inorder[i]);
            pos += 1;
            root->left = buildBinary(preorder, inorder, start, i-1, pos);
            root->right = buildBinary(preorder, inorder, i+1, end, pos);
        }
        return(root);
    }
  
 
    
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        
        int pos = 0;
        return buildBinary(preorder, inorder, 0, inorder.size()-1, pos);
    }
};